using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Razor.Language;
using Microsoft.EntityFrameworkCore;
using SLU.CS.LAB.Data;
using SLU.CS.LAB.Models;

namespace SLU.CS.LAB.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class ScheduleController : ControllerBase
    {
        private readonly DataContext _context;

        public ScheduleController(DataContext context)
        {
            _context = context;
        }

        [HttpGet]
        public ActionResult<List<ScheduleDto>> GetSchedule()
        {
<<<<<<< Updated upstream
            var result =  await _context.TASchedules.OrderBy(x => x.TA).ToListAsync();
=======
>>>>>>> Stashed changes

            var rows =  _context.TASchedules.ToList().GroupBy(x => x.Time).ToList();

            var result = new List<ScheduleDto>();

            foreach (var item in rows) { 
            
                ScheduleDto dto = new ScheduleDto();
                dto.time = item.ToList()[0].Time;
                for (var i = 0; i < item.ToList().Count; i++)
                {

                    switch (item.ToList()[i].Days.ToString())
                    {
                        case "Sunday":
                            dto.sun = item.ToList()[i].TA;
                            break;
                        case "Monday":
                            dto.mon = item.ToList()[i].TA;
                            break;
                        case "Tuesday":
                            dto.tue = item.ToList()[i].TA;
                            break;
                        case "Wednesday":
                            dto.wed = item.ToList()[i].TA;
                            break;
                        default: break;
                    }
                }

                result.Add(dto);
            }
         
            return result;
        }

        

        [HttpPut]
        public ActionResult Edit(List<ScheduleDto> scheduleDto)
        {

            //var rowInDb = _context.TASchedules.ToList();
            var rows = _context.TASchedules.ToList().GroupBy(x => x.Time).ToList();
            foreach (var item in rows) {
                for (var i = 0; i < item.ToList().Count; i++)
                {
                    var rowFromUI = scheduleDto.Where(x => x.time == item.ToList()[i].Time).FirstOrDefault();

                    switch (item.ToList()[i].Days.ToString()) {
                        case "Sunday":
                            item.ToList()[i].TA = rowFromUI.sun;
                            break;
                        case "Monday":
                            item.ToList()[i].TA = rowFromUI.mon;
                            break;
                        case "Tuesday":
                            item.ToList()[i].TA = rowFromUI.tue;
                            break;
                        case "Wednesday":
                            item.ToList()[i].TA = rowFromUI.wed;
                            break;
                        default:break;

                    }
                }

            }
            _context.SaveChanges();

            return Ok();
        
        }

        [HttpPost]
        public ActionResult populateSchedule()
        {    //added objects like this to keep it in order so that the frontend renders in correct format
            var schedule = new List<Schedule>();
            
            var row1 = new Schedule(){ Days = DayOfWeek.Sunday, Time = "9:00AM-10:00AM", TA=""};
            _context.Add(row1);
            _context.SaveChanges();

            var row2 = new Schedule(){ Days = DayOfWeek.Sunday, Time = "10:00AM-11:00AM", TA = "" };
               _context.Add(row2);
            _context.SaveChanges();

            var row3 = new Schedule() { Days = DayOfWeek.Sunday, Time = "11:00AM-12:00PM", TA = "" };
            _context.Add(row3);
            _context.SaveChanges();

            var row4 = new Schedule() { Days = DayOfWeek.Sunday, Time = "12:00PM-1:00PM", TA = "" };
            _context.Add(row4);
            _context.SaveChanges();

            var row5 = new Schedule() { Days = DayOfWeek.Sunday, Time = "1:00PM-2:00PM", TA = "" };
            _context.Add(row5);
            _context.SaveChanges();

            var row6 = new Schedule() { Days = DayOfWeek.Monday, Time = "9:00AM-10:00AM", TA = "" };
            _context.Add(row6);
            _context.SaveChanges();

            var row7 = new Schedule() { Days = DayOfWeek.Monday, Time = "10:00AM-11:00AM", TA = "" };
            _context.Add(row7);
            _context.SaveChanges();

            var row8 = new Schedule() { Days = DayOfWeek.Monday, Time = "11:00AM-12:00PM", TA = "" };
            _context.Add(row8);
            _context.SaveChanges();

            var row9 = new Schedule() { Days = DayOfWeek.Monday, Time = "12:00PM-1:00PM", TA = "" };
            _context.Add(row9);
            _context.SaveChanges();

            var row10 = new Schedule() { Days = DayOfWeek.Monday, Time = "1:00PM-2:00PM", TA = "" };
            _context.Add(row10); 
            _context.SaveChanges();

            var row11 = new Schedule() { Days = DayOfWeek.Tuesday, Time = "9:00AM-10:00AM", TA = "" };
            _context.Add(row11);
            _context.SaveChanges();

            var row12 = new Schedule() { Days = DayOfWeek.Tuesday, Time = "10:00AM-11:00AM", TA = "" };
            _context.Add(row12);
            _context.SaveChanges();

            var row13 = new Schedule() { Days = DayOfWeek.Tuesday, Time = "11:00AM-12:00PM", TA = "" };
            _context.Add(row13);
            _context.SaveChanges();

            var row14 = new Schedule() { Days = DayOfWeek.Tuesday, Time = "12:00PM-1:00PM", TA = "" };
            _context.Add(row14);
            _context.SaveChanges();

            var row15 = new Schedule() { Days = DayOfWeek.Tuesday, Time = "1:00PM-2:00PM", TA = "" };
            _context.Add(row15);
            _context.SaveChanges();

            var row16 = new Schedule() { Days = DayOfWeek.Wednesday, Time = "9:00AM-10:00AM", TA = "" };
            _context.Add(row16);
            _context.SaveChanges();

            var row17 = new Schedule() { Days = DayOfWeek.Wednesday, Time = "10:00AM-11:00AM", TA = "" };
            _context.Add(row17);
            _context.SaveChanges();

            var row18 = new Schedule() { Days = DayOfWeek.Wednesday, Time = "11:00AM-12:00PM", TA = "" };
            _context.Add(row18);
            _context.SaveChanges();

            var row19 = new Schedule() { Days = DayOfWeek.Wednesday, Time = "12:00PM-1:00PM", TA = "" };
            _context.Add(row19);
            _context.SaveChanges();

            var row20 = new Schedule() { Days = DayOfWeek.Wednesday, Time = "1:00PM-2:00PM", TA = "" };
            _context.Add(row20); 
             _context.SaveChanges();

            return Ok();

        }
    }
}
